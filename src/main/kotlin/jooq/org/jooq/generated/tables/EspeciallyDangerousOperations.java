/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.EspeciallyDangerousOperationsRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EspeciallyDangerousOperations extends TableImpl<EspeciallyDangerousOperationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>especially_dangerous_operations</code>
     */
    public static final EspeciallyDangerousOperations ESPECIALLY_DANGEROUS_OPERATIONS = new EspeciallyDangerousOperations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EspeciallyDangerousOperationsRecord> getRecordType() {
        return EspeciallyDangerousOperationsRecord.class;
    }

    /**
     * The column <code>especially_dangerous_operations.id</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>especially_dangerous_operations.name</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>especially_dangerous_operations.date_start</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, LocalDateTime> DATE_START = createField(DSL.name("date_start"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>especially_dangerous_operations.date_stop</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, LocalDateTime> DATE_STOP = createField(DSL.name("date_stop"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>especially_dangerous_operations.employee_id</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, Long> EMPLOYEE_ID = createField(DSL.name("employee_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>especially_dangerous_operations.chief_engineer</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, Long> CHIEF_ENGINEER = createField(DSL.name("chief_engineer"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>especially_dangerous_operations.datecheck</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, LocalDateTime> DATECHECK = createField(DSL.name("datecheck"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>especially_dangerous_operations.location_id</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, Long> LOCATION_ID = createField(DSL.name("location_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>especially_dangerous_operations.oor_id</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, Long> OOR_ID = createField(DSL.name("oor_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>especially_dangerous_operations.urgently</code>.
     */
    public final TableField<EspeciallyDangerousOperationsRecord, Boolean> URGENTLY = createField(DSL.name("urgently"), SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");

    private EspeciallyDangerousOperations(Name alias, Table<EspeciallyDangerousOperationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private EspeciallyDangerousOperations(Name alias, Table<EspeciallyDangerousOperationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>especially_dangerous_operations</code> table
     * reference
     */
    public EspeciallyDangerousOperations(String alias) {
        this(DSL.name(alias), ESPECIALLY_DANGEROUS_OPERATIONS);
    }

    /**
     * Create an aliased <code>especially_dangerous_operations</code> table
     * reference
     */
    public EspeciallyDangerousOperations(Name alias) {
        this(alias, ESPECIALLY_DANGEROUS_OPERATIONS);
    }

    /**
     * Create a <code>especially_dangerous_operations</code> table reference
     */
    public EspeciallyDangerousOperations() {
        this(DSL.name("especially_dangerous_operations"), null);
    }

    public <O extends Record> EspeciallyDangerousOperations(Table<O> child, ForeignKey<O, EspeciallyDangerousOperationsRecord> key) {
        super(child, key, ESPECIALLY_DANGEROUS_OPERATIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<EspeciallyDangerousOperationsRecord, Long> getIdentity() {
        return (Identity<EspeciallyDangerousOperationsRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<EspeciallyDangerousOperationsRecord> getPrimaryKey() {
        return Keys.ESPECIALLY_DANGEROUS_OPERATIONS_PKEY;
    }

    @Override
    public List<ForeignKey<EspeciallyDangerousOperationsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_EMPLOYEE_OOO, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_USER_SYSTEM_ENGINEER, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_LOCATION_OOO, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_OOR_OOO);
    }

    private transient UserSystem _fkEmployeeOoo;
    private transient UserSystem _fkUserSystemEngineer;
    private transient Location _location;
    private transient ListEspeciallyDangerousWork _listEspeciallyDangerousWork;

    public UserSystem fkEmployeeOoo() {
        if (_fkEmployeeOoo == null)
            _fkEmployeeOoo = new UserSystem(this, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_EMPLOYEE_OOO);

        return _fkEmployeeOoo;
    }

    public UserSystem fkUserSystemEngineer() {
        if (_fkUserSystemEngineer == null)
            _fkUserSystemEngineer = new UserSystem(this, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_USER_SYSTEM_ENGINEER);

        return _fkUserSystemEngineer;
    }

    public Location location() {
        if (_location == null)
            _location = new Location(this, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_LOCATION_OOO);

        return _location;
    }

    public ListEspeciallyDangerousWork listEspeciallyDangerousWork() {
        if (_listEspeciallyDangerousWork == null)
            _listEspeciallyDangerousWork = new ListEspeciallyDangerousWork(this, Keys.ESPECIALLY_DANGEROUS_OPERATIONS__FK_OOR_OOO);

        return _listEspeciallyDangerousWork;
    }

    @Override
    public EspeciallyDangerousOperations as(String alias) {
        return new EspeciallyDangerousOperations(DSL.name(alias), this);
    }

    @Override
    public EspeciallyDangerousOperations as(Name alias) {
        return new EspeciallyDangerousOperations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EspeciallyDangerousOperations rename(String name) {
        return new EspeciallyDangerousOperations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EspeciallyDangerousOperations rename(Name name) {
        return new EspeciallyDangerousOperations(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, LocalDateTime, LocalDateTime, Long, Long, LocalDateTime, Long, Long, Boolean> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
