/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CopyrightSupervisionReport implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long          id;
    private final Long          employeeId;
    private final LocalDateTime dateCreate;
    private final Long          presence;
    private final LocalTime     datePresence;
    private final Long          locationId;
    private final Long          responsibleLeader;
    private final String        workDuringCheck;
    private final String        auditedUnit;
    private final Long          chiefEngineer;
    private final LocalDateTime datecheck;
    private final String        changesMade;
    private final Boolean       signature;
    private final Boolean       employeesRequirementsTechnologicalDocumentation;
    private final String        employeesRequirementsTechnologicalDocumentationComment;
    private final String[]      employeesRequirementsTechnologicalDocumentationTeg;
    private final Boolean       executionPreparatoryWorkAccordancePpr;
    private final String        executionPreparatoryWorkAccordancePprComment;
    private final String[]      executionPreparatoryWorkAccordancePprTeg;
    private final Boolean       complianceOrganizationDesignSolutionSpecifiedPpr;
    private final String        complianceOrganizationDesignSolutionSpecifiedPprComment;
    private final String[]      complianceOrganizationDesignSolutionSpecifiedPprTeg;
    private final Boolean       complianceWorkPerformedDesignSolution;
    private final String        complianceWorkPerformedDesignSolutionComment;
    private final String[]      complianceWorkPerformedDesignSolutionTeg;
    private final Boolean       complianceSequenceTechnologyRelevantOperations;
    private final String        complianceSequenceTechnologyRelevantOperationsComment;
    private final String[]      complianceSequenceTechnologyRelevantOperationsTeg;
    private final Boolean       complianceAppliedMeansMechanizationSpecifiedPpr;
    private final String        complianceAppliedMeansMechanizationSpecifiedPprComment;
    private final String[]      complianceAppliedMeansMechanizationSpecifiedPprTeg;
    private final Boolean       complianceUsedRiggingEquipmentRequirementsPpr;
    private final String        complianceUsedRiggingEquipmentRequirementsPprComment;
    private final String[]      complianceUsedRiggingEquipmentRequirementsPprTeg;
    private final Boolean       complianceTrussGrippingDevicesRequirementsPpr;
    private final String        complianceTrussGrippingDevicesRequirementsPprComment;
    private final String[]      complianceTrussGrippingDevicesRequirementsPprTeg;

    public CopyrightSupervisionReport(CopyrightSupervisionReport value) {
        this.id = value.id;
        this.employeeId = value.employeeId;
        this.dateCreate = value.dateCreate;
        this.presence = value.presence;
        this.datePresence = value.datePresence;
        this.locationId = value.locationId;
        this.responsibleLeader = value.responsibleLeader;
        this.workDuringCheck = value.workDuringCheck;
        this.auditedUnit = value.auditedUnit;
        this.chiefEngineer = value.chiefEngineer;
        this.datecheck = value.datecheck;
        this.changesMade = value.changesMade;
        this.signature = value.signature;
        this.employeesRequirementsTechnologicalDocumentation = value.employeesRequirementsTechnologicalDocumentation;
        this.employeesRequirementsTechnologicalDocumentationComment = value.employeesRequirementsTechnologicalDocumentationComment;
        this.employeesRequirementsTechnologicalDocumentationTeg = value.employeesRequirementsTechnologicalDocumentationTeg;
        this.executionPreparatoryWorkAccordancePpr = value.executionPreparatoryWorkAccordancePpr;
        this.executionPreparatoryWorkAccordancePprComment = value.executionPreparatoryWorkAccordancePprComment;
        this.executionPreparatoryWorkAccordancePprTeg = value.executionPreparatoryWorkAccordancePprTeg;
        this.complianceOrganizationDesignSolutionSpecifiedPpr = value.complianceOrganizationDesignSolutionSpecifiedPpr;
        this.complianceOrganizationDesignSolutionSpecifiedPprComment = value.complianceOrganizationDesignSolutionSpecifiedPprComment;
        this.complianceOrganizationDesignSolutionSpecifiedPprTeg = value.complianceOrganizationDesignSolutionSpecifiedPprTeg;
        this.complianceWorkPerformedDesignSolution = value.complianceWorkPerformedDesignSolution;
        this.complianceWorkPerformedDesignSolutionComment = value.complianceWorkPerformedDesignSolutionComment;
        this.complianceWorkPerformedDesignSolutionTeg = value.complianceWorkPerformedDesignSolutionTeg;
        this.complianceSequenceTechnologyRelevantOperations = value.complianceSequenceTechnologyRelevantOperations;
        this.complianceSequenceTechnologyRelevantOperationsComment = value.complianceSequenceTechnologyRelevantOperationsComment;
        this.complianceSequenceTechnologyRelevantOperationsTeg = value.complianceSequenceTechnologyRelevantOperationsTeg;
        this.complianceAppliedMeansMechanizationSpecifiedPpr = value.complianceAppliedMeansMechanizationSpecifiedPpr;
        this.complianceAppliedMeansMechanizationSpecifiedPprComment = value.complianceAppliedMeansMechanizationSpecifiedPprComment;
        this.complianceAppliedMeansMechanizationSpecifiedPprTeg = value.complianceAppliedMeansMechanizationSpecifiedPprTeg;
        this.complianceUsedRiggingEquipmentRequirementsPpr = value.complianceUsedRiggingEquipmentRequirementsPpr;
        this.complianceUsedRiggingEquipmentRequirementsPprComment = value.complianceUsedRiggingEquipmentRequirementsPprComment;
        this.complianceUsedRiggingEquipmentRequirementsPprTeg = value.complianceUsedRiggingEquipmentRequirementsPprTeg;
        this.complianceTrussGrippingDevicesRequirementsPpr = value.complianceTrussGrippingDevicesRequirementsPpr;
        this.complianceTrussGrippingDevicesRequirementsPprComment = value.complianceTrussGrippingDevicesRequirementsPprComment;
        this.complianceTrussGrippingDevicesRequirementsPprTeg = value.complianceTrussGrippingDevicesRequirementsPprTeg;
    }

    public CopyrightSupervisionReport(
        Long          id,
        Long          employeeId,
        LocalDateTime dateCreate,
        Long          presence,
        LocalTime     datePresence,
        Long          locationId,
        Long          responsibleLeader,
        String        workDuringCheck,
        String        auditedUnit,
        Long          chiefEngineer,
        LocalDateTime datecheck,
        String        changesMade,
        Boolean       signature,
        Boolean       employeesRequirementsTechnologicalDocumentation,
        String        employeesRequirementsTechnologicalDocumentationComment,
        String[]      employeesRequirementsTechnologicalDocumentationTeg,
        Boolean       executionPreparatoryWorkAccordancePpr,
        String        executionPreparatoryWorkAccordancePprComment,
        String[]      executionPreparatoryWorkAccordancePprTeg,
        Boolean       complianceOrganizationDesignSolutionSpecifiedPpr,
        String        complianceOrganizationDesignSolutionSpecifiedPprComment,
        String[]      complianceOrganizationDesignSolutionSpecifiedPprTeg,
        Boolean       complianceWorkPerformedDesignSolution,
        String        complianceWorkPerformedDesignSolutionComment,
        String[]      complianceWorkPerformedDesignSolutionTeg,
        Boolean       complianceSequenceTechnologyRelevantOperations,
        String        complianceSequenceTechnologyRelevantOperationsComment,
        String[]      complianceSequenceTechnologyRelevantOperationsTeg,
        Boolean       complianceAppliedMeansMechanizationSpecifiedPpr,
        String        complianceAppliedMeansMechanizationSpecifiedPprComment,
        String[]      complianceAppliedMeansMechanizationSpecifiedPprTeg,
        Boolean       complianceUsedRiggingEquipmentRequirementsPpr,
        String        complianceUsedRiggingEquipmentRequirementsPprComment,
        String[]      complianceUsedRiggingEquipmentRequirementsPprTeg,
        Boolean       complianceTrussGrippingDevicesRequirementsPpr,
        String        complianceTrussGrippingDevicesRequirementsPprComment,
        String[]      complianceTrussGrippingDevicesRequirementsPprTeg
    ) {
        this.id = id;
        this.employeeId = employeeId;
        this.dateCreate = dateCreate;
        this.presence = presence;
        this.datePresence = datePresence;
        this.locationId = locationId;
        this.responsibleLeader = responsibleLeader;
        this.workDuringCheck = workDuringCheck;
        this.auditedUnit = auditedUnit;
        this.chiefEngineer = chiefEngineer;
        this.datecheck = datecheck;
        this.changesMade = changesMade;
        this.signature = signature;
        this.employeesRequirementsTechnologicalDocumentation = employeesRequirementsTechnologicalDocumentation;
        this.employeesRequirementsTechnologicalDocumentationComment = employeesRequirementsTechnologicalDocumentationComment;
        this.employeesRequirementsTechnologicalDocumentationTeg = employeesRequirementsTechnologicalDocumentationTeg;
        this.executionPreparatoryWorkAccordancePpr = executionPreparatoryWorkAccordancePpr;
        this.executionPreparatoryWorkAccordancePprComment = executionPreparatoryWorkAccordancePprComment;
        this.executionPreparatoryWorkAccordancePprTeg = executionPreparatoryWorkAccordancePprTeg;
        this.complianceOrganizationDesignSolutionSpecifiedPpr = complianceOrganizationDesignSolutionSpecifiedPpr;
        this.complianceOrganizationDesignSolutionSpecifiedPprComment = complianceOrganizationDesignSolutionSpecifiedPprComment;
        this.complianceOrganizationDesignSolutionSpecifiedPprTeg = complianceOrganizationDesignSolutionSpecifiedPprTeg;
        this.complianceWorkPerformedDesignSolution = complianceWorkPerformedDesignSolution;
        this.complianceWorkPerformedDesignSolutionComment = complianceWorkPerformedDesignSolutionComment;
        this.complianceWorkPerformedDesignSolutionTeg = complianceWorkPerformedDesignSolutionTeg;
        this.complianceSequenceTechnologyRelevantOperations = complianceSequenceTechnologyRelevantOperations;
        this.complianceSequenceTechnologyRelevantOperationsComment = complianceSequenceTechnologyRelevantOperationsComment;
        this.complianceSequenceTechnologyRelevantOperationsTeg = complianceSequenceTechnologyRelevantOperationsTeg;
        this.complianceAppliedMeansMechanizationSpecifiedPpr = complianceAppliedMeansMechanizationSpecifiedPpr;
        this.complianceAppliedMeansMechanizationSpecifiedPprComment = complianceAppliedMeansMechanizationSpecifiedPprComment;
        this.complianceAppliedMeansMechanizationSpecifiedPprTeg = complianceAppliedMeansMechanizationSpecifiedPprTeg;
        this.complianceUsedRiggingEquipmentRequirementsPpr = complianceUsedRiggingEquipmentRequirementsPpr;
        this.complianceUsedRiggingEquipmentRequirementsPprComment = complianceUsedRiggingEquipmentRequirementsPprComment;
        this.complianceUsedRiggingEquipmentRequirementsPprTeg = complianceUsedRiggingEquipmentRequirementsPprTeg;
        this.complianceTrussGrippingDevicesRequirementsPpr = complianceTrussGrippingDevicesRequirementsPpr;
        this.complianceTrussGrippingDevicesRequirementsPprComment = complianceTrussGrippingDevicesRequirementsPprComment;
        this.complianceTrussGrippingDevicesRequirementsPprTeg = complianceTrussGrippingDevicesRequirementsPprTeg;
    }

    /**
     * Getter for <code>copyright_supervision_report.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>copyright_supervision_report.employee_id</code>.
     */
    public Long getEmployeeId() {
        return this.employeeId;
    }

    /**
     * Getter for <code>copyright_supervision_report.date_create</code>.
     */
    public LocalDateTime getDateCreate() {
        return this.dateCreate;
    }

    /**
     * Getter for <code>copyright_supervision_report.presence</code>.
     */
    public Long getPresence() {
        return this.presence;
    }

    /**
     * Getter for <code>copyright_supervision_report.date_presence</code>.
     */
    public LocalTime getDatePresence() {
        return this.datePresence;
    }

    /**
     * Getter for <code>copyright_supervision_report.location_id</code>.
     */
    public Long getLocationId() {
        return this.locationId;
    }

    /**
     * Getter for <code>copyright_supervision_report.responsible_leader</code>.
     */
    public Long getResponsibleLeader() {
        return this.responsibleLeader;
    }

    /**
     * Getter for <code>copyright_supervision_report.work_during_check</code>.
     */
    public String getWorkDuringCheck() {
        return this.workDuringCheck;
    }

    /**
     * Getter for <code>copyright_supervision_report.audited_unit</code>.
     */
    public String getAuditedUnit() {
        return this.auditedUnit;
    }

    /**
     * Getter for <code>copyright_supervision_report.chief_engineer</code>.
     */
    public Long getChiefEngineer() {
        return this.chiefEngineer;
    }

    /**
     * Getter for <code>copyright_supervision_report.datecheck</code>.
     */
    public LocalDateTime getDatecheck() {
        return this.datecheck;
    }

    /**
     * Getter for <code>copyright_supervision_report.changes_made</code>.
     */
    public String getChangesMade() {
        return this.changesMade;
    }

    /**
     * Getter for <code>copyright_supervision_report.signature</code>.
     */
    public Boolean getSignature() {
        return this.signature;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.employees_requirements_technological_documentation</code>.
     */
    public Boolean getEmployeesRequirementsTechnologicalDocumentation() {
        return this.employeesRequirementsTechnologicalDocumentation;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.employees_requirements_technological_documentation_comment</code>.
     */
    public String getEmployeesRequirementsTechnologicalDocumentationComment() {
        return this.employeesRequirementsTechnologicalDocumentationComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.employees_requirements_technological_documentation_teg</code>.
     */
    public String[] getEmployeesRequirementsTechnologicalDocumentationTeg() {
        return this.employeesRequirementsTechnologicalDocumentationTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.execution_preparatory_work_accordance_ppr</code>.
     */
    public Boolean getExecutionPreparatoryWorkAccordancePpr() {
        return this.executionPreparatoryWorkAccordancePpr;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.execution_preparatory_work_accordance_ppr_comment</code>.
     */
    public String getExecutionPreparatoryWorkAccordancePprComment() {
        return this.executionPreparatoryWorkAccordancePprComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.execution_preparatory_work_accordance_ppr_teg</code>.
     */
    public String[] getExecutionPreparatoryWorkAccordancePprTeg() {
        return this.executionPreparatoryWorkAccordancePprTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_organization_design_solution_specified_ppr</code>.
     */
    public Boolean getComplianceOrganizationDesignSolutionSpecifiedPpr() {
        return this.complianceOrganizationDesignSolutionSpecifiedPpr;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_organization_design_solution_specified_ppr_comment</code>.
     */
    public String getComplianceOrganizationDesignSolutionSpecifiedPprComment() {
        return this.complianceOrganizationDesignSolutionSpecifiedPprComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_organization_design_solution_specified_ppr_teg</code>.
     */
    public String[] getComplianceOrganizationDesignSolutionSpecifiedPprTeg() {
        return this.complianceOrganizationDesignSolutionSpecifiedPprTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_work_performed_design_solution</code>.
     */
    public Boolean getComplianceWorkPerformedDesignSolution() {
        return this.complianceWorkPerformedDesignSolution;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_work_performed_design_solution_comment</code>.
     */
    public String getComplianceWorkPerformedDesignSolutionComment() {
        return this.complianceWorkPerformedDesignSolutionComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_work_performed_design_solution_teg</code>.
     */
    public String[] getComplianceWorkPerformedDesignSolutionTeg() {
        return this.complianceWorkPerformedDesignSolutionTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_sequence_technology_relevant_operations</code>.
     */
    public Boolean getComplianceSequenceTechnologyRelevantOperations() {
        return this.complianceSequenceTechnologyRelevantOperations;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_sequence_technology_relevant_operations_comment</code>.
     */
    public String getComplianceSequenceTechnologyRelevantOperationsComment() {
        return this.complianceSequenceTechnologyRelevantOperationsComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_sequence_technology_relevant_operations_teg</code>.
     */
    public String[] getComplianceSequenceTechnologyRelevantOperationsTeg() {
        return this.complianceSequenceTechnologyRelevantOperationsTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_applied_means_mechanization_specified_ppr</code>.
     */
    public Boolean getComplianceAppliedMeansMechanizationSpecifiedPpr() {
        return this.complianceAppliedMeansMechanizationSpecifiedPpr;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_applied_means_mechanization_specified_ppr_comment</code>.
     */
    public String getComplianceAppliedMeansMechanizationSpecifiedPprComment() {
        return this.complianceAppliedMeansMechanizationSpecifiedPprComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_applied_means_mechanization_specified_ppr_teg</code>.
     */
    public String[] getComplianceAppliedMeansMechanizationSpecifiedPprTeg() {
        return this.complianceAppliedMeansMechanizationSpecifiedPprTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_used_rigging_equipment_requirements_ppr</code>.
     */
    public Boolean getComplianceUsedRiggingEquipmentRequirementsPpr() {
        return this.complianceUsedRiggingEquipmentRequirementsPpr;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_used_rigging_equipment_requirements_ppr_comment</code>.
     */
    public String getComplianceUsedRiggingEquipmentRequirementsPprComment() {
        return this.complianceUsedRiggingEquipmentRequirementsPprComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_used_rigging_equipment_requirements_ppr_teg</code>.
     */
    public String[] getComplianceUsedRiggingEquipmentRequirementsPprTeg() {
        return this.complianceUsedRiggingEquipmentRequirementsPprTeg;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_truss_gripping_devices_requirements_ppr</code>.
     */
    public Boolean getComplianceTrussGrippingDevicesRequirementsPpr() {
        return this.complianceTrussGrippingDevicesRequirementsPpr;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_truss_gripping_devices_requirements_ppr_comment</code>.
     */
    public String getComplianceTrussGrippingDevicesRequirementsPprComment() {
        return this.complianceTrussGrippingDevicesRequirementsPprComment;
    }

    /**
     * Getter for
     * <code>copyright_supervision_report.compliance_truss_gripping_devices_requirements_ppr_teg</code>.
     */
    public String[] getComplianceTrussGrippingDevicesRequirementsPprTeg() {
        return this.complianceTrussGrippingDevicesRequirementsPprTeg;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CopyrightSupervisionReport other = (CopyrightSupervisionReport) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (employeeId == null) {
            if (other.employeeId != null)
                return false;
        }
        else if (!employeeId.equals(other.employeeId))
            return false;
        if (dateCreate == null) {
            if (other.dateCreate != null)
                return false;
        }
        else if (!dateCreate.equals(other.dateCreate))
            return false;
        if (presence == null) {
            if (other.presence != null)
                return false;
        }
        else if (!presence.equals(other.presence))
            return false;
        if (datePresence == null) {
            if (other.datePresence != null)
                return false;
        }
        else if (!datePresence.equals(other.datePresence))
            return false;
        if (locationId == null) {
            if (other.locationId != null)
                return false;
        }
        else if (!locationId.equals(other.locationId))
            return false;
        if (responsibleLeader == null) {
            if (other.responsibleLeader != null)
                return false;
        }
        else if (!responsibleLeader.equals(other.responsibleLeader))
            return false;
        if (workDuringCheck == null) {
            if (other.workDuringCheck != null)
                return false;
        }
        else if (!workDuringCheck.equals(other.workDuringCheck))
            return false;
        if (auditedUnit == null) {
            if (other.auditedUnit != null)
                return false;
        }
        else if (!auditedUnit.equals(other.auditedUnit))
            return false;
        if (chiefEngineer == null) {
            if (other.chiefEngineer != null)
                return false;
        }
        else if (!chiefEngineer.equals(other.chiefEngineer))
            return false;
        if (datecheck == null) {
            if (other.datecheck != null)
                return false;
        }
        else if (!datecheck.equals(other.datecheck))
            return false;
        if (changesMade == null) {
            if (other.changesMade != null)
                return false;
        }
        else if (!changesMade.equals(other.changesMade))
            return false;
        if (signature == null) {
            if (other.signature != null)
                return false;
        }
        else if (!signature.equals(other.signature))
            return false;
        if (employeesRequirementsTechnologicalDocumentation == null) {
            if (other.employeesRequirementsTechnologicalDocumentation != null)
                return false;
        }
        else if (!employeesRequirementsTechnologicalDocumentation.equals(other.employeesRequirementsTechnologicalDocumentation))
            return false;
        if (employeesRequirementsTechnologicalDocumentationComment == null) {
            if (other.employeesRequirementsTechnologicalDocumentationComment != null)
                return false;
        }
        else if (!employeesRequirementsTechnologicalDocumentationComment.equals(other.employeesRequirementsTechnologicalDocumentationComment))
            return false;
        if (employeesRequirementsTechnologicalDocumentationTeg == null) {
            if (other.employeesRequirementsTechnologicalDocumentationTeg != null)
                return false;
        }
        else if (!Arrays.equals(employeesRequirementsTechnologicalDocumentationTeg, other.employeesRequirementsTechnologicalDocumentationTeg))
            return false;
        if (executionPreparatoryWorkAccordancePpr == null) {
            if (other.executionPreparatoryWorkAccordancePpr != null)
                return false;
        }
        else if (!executionPreparatoryWorkAccordancePpr.equals(other.executionPreparatoryWorkAccordancePpr))
            return false;
        if (executionPreparatoryWorkAccordancePprComment == null) {
            if (other.executionPreparatoryWorkAccordancePprComment != null)
                return false;
        }
        else if (!executionPreparatoryWorkAccordancePprComment.equals(other.executionPreparatoryWorkAccordancePprComment))
            return false;
        if (executionPreparatoryWorkAccordancePprTeg == null) {
            if (other.executionPreparatoryWorkAccordancePprTeg != null)
                return false;
        }
        else if (!Arrays.equals(executionPreparatoryWorkAccordancePprTeg, other.executionPreparatoryWorkAccordancePprTeg))
            return false;
        if (complianceOrganizationDesignSolutionSpecifiedPpr == null) {
            if (other.complianceOrganizationDesignSolutionSpecifiedPpr != null)
                return false;
        }
        else if (!complianceOrganizationDesignSolutionSpecifiedPpr.equals(other.complianceOrganizationDesignSolutionSpecifiedPpr))
            return false;
        if (complianceOrganizationDesignSolutionSpecifiedPprComment == null) {
            if (other.complianceOrganizationDesignSolutionSpecifiedPprComment != null)
                return false;
        }
        else if (!complianceOrganizationDesignSolutionSpecifiedPprComment.equals(other.complianceOrganizationDesignSolutionSpecifiedPprComment))
            return false;
        if (complianceOrganizationDesignSolutionSpecifiedPprTeg == null) {
            if (other.complianceOrganizationDesignSolutionSpecifiedPprTeg != null)
                return false;
        }
        else if (!Arrays.equals(complianceOrganizationDesignSolutionSpecifiedPprTeg, other.complianceOrganizationDesignSolutionSpecifiedPprTeg))
            return false;
        if (complianceWorkPerformedDesignSolution == null) {
            if (other.complianceWorkPerformedDesignSolution != null)
                return false;
        }
        else if (!complianceWorkPerformedDesignSolution.equals(other.complianceWorkPerformedDesignSolution))
            return false;
        if (complianceWorkPerformedDesignSolutionComment == null) {
            if (other.complianceWorkPerformedDesignSolutionComment != null)
                return false;
        }
        else if (!complianceWorkPerformedDesignSolutionComment.equals(other.complianceWorkPerformedDesignSolutionComment))
            return false;
        if (complianceWorkPerformedDesignSolutionTeg == null) {
            if (other.complianceWorkPerformedDesignSolutionTeg != null)
                return false;
        }
        else if (!Arrays.equals(complianceWorkPerformedDesignSolutionTeg, other.complianceWorkPerformedDesignSolutionTeg))
            return false;
        if (complianceSequenceTechnologyRelevantOperations == null) {
            if (other.complianceSequenceTechnologyRelevantOperations != null)
                return false;
        }
        else if (!complianceSequenceTechnologyRelevantOperations.equals(other.complianceSequenceTechnologyRelevantOperations))
            return false;
        if (complianceSequenceTechnologyRelevantOperationsComment == null) {
            if (other.complianceSequenceTechnologyRelevantOperationsComment != null)
                return false;
        }
        else if (!complianceSequenceTechnologyRelevantOperationsComment.equals(other.complianceSequenceTechnologyRelevantOperationsComment))
            return false;
        if (complianceSequenceTechnologyRelevantOperationsTeg == null) {
            if (other.complianceSequenceTechnologyRelevantOperationsTeg != null)
                return false;
        }
        else if (!Arrays.equals(complianceSequenceTechnologyRelevantOperationsTeg, other.complianceSequenceTechnologyRelevantOperationsTeg))
            return false;
        if (complianceAppliedMeansMechanizationSpecifiedPpr == null) {
            if (other.complianceAppliedMeansMechanizationSpecifiedPpr != null)
                return false;
        }
        else if (!complianceAppliedMeansMechanizationSpecifiedPpr.equals(other.complianceAppliedMeansMechanizationSpecifiedPpr))
            return false;
        if (complianceAppliedMeansMechanizationSpecifiedPprComment == null) {
            if (other.complianceAppliedMeansMechanizationSpecifiedPprComment != null)
                return false;
        }
        else if (!complianceAppliedMeansMechanizationSpecifiedPprComment.equals(other.complianceAppliedMeansMechanizationSpecifiedPprComment))
            return false;
        if (complianceAppliedMeansMechanizationSpecifiedPprTeg == null) {
            if (other.complianceAppliedMeansMechanizationSpecifiedPprTeg != null)
                return false;
        }
        else if (!Arrays.equals(complianceAppliedMeansMechanizationSpecifiedPprTeg, other.complianceAppliedMeansMechanizationSpecifiedPprTeg))
            return false;
        if (complianceUsedRiggingEquipmentRequirementsPpr == null) {
            if (other.complianceUsedRiggingEquipmentRequirementsPpr != null)
                return false;
        }
        else if (!complianceUsedRiggingEquipmentRequirementsPpr.equals(other.complianceUsedRiggingEquipmentRequirementsPpr))
            return false;
        if (complianceUsedRiggingEquipmentRequirementsPprComment == null) {
            if (other.complianceUsedRiggingEquipmentRequirementsPprComment != null)
                return false;
        }
        else if (!complianceUsedRiggingEquipmentRequirementsPprComment.equals(other.complianceUsedRiggingEquipmentRequirementsPprComment))
            return false;
        if (complianceUsedRiggingEquipmentRequirementsPprTeg == null) {
            if (other.complianceUsedRiggingEquipmentRequirementsPprTeg != null)
                return false;
        }
        else if (!Arrays.equals(complianceUsedRiggingEquipmentRequirementsPprTeg, other.complianceUsedRiggingEquipmentRequirementsPprTeg))
            return false;
        if (complianceTrussGrippingDevicesRequirementsPpr == null) {
            if (other.complianceTrussGrippingDevicesRequirementsPpr != null)
                return false;
        }
        else if (!complianceTrussGrippingDevicesRequirementsPpr.equals(other.complianceTrussGrippingDevicesRequirementsPpr))
            return false;
        if (complianceTrussGrippingDevicesRequirementsPprComment == null) {
            if (other.complianceTrussGrippingDevicesRequirementsPprComment != null)
                return false;
        }
        else if (!complianceTrussGrippingDevicesRequirementsPprComment.equals(other.complianceTrussGrippingDevicesRequirementsPprComment))
            return false;
        if (complianceTrussGrippingDevicesRequirementsPprTeg == null) {
            if (other.complianceTrussGrippingDevicesRequirementsPprTeg != null)
                return false;
        }
        else if (!Arrays.equals(complianceTrussGrippingDevicesRequirementsPprTeg, other.complianceTrussGrippingDevicesRequirementsPprTeg))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.employeeId == null) ? 0 : this.employeeId.hashCode());
        result = prime * result + ((this.dateCreate == null) ? 0 : this.dateCreate.hashCode());
        result = prime * result + ((this.presence == null) ? 0 : this.presence.hashCode());
        result = prime * result + ((this.datePresence == null) ? 0 : this.datePresence.hashCode());
        result = prime * result + ((this.locationId == null) ? 0 : this.locationId.hashCode());
        result = prime * result + ((this.responsibleLeader == null) ? 0 : this.responsibleLeader.hashCode());
        result = prime * result + ((this.workDuringCheck == null) ? 0 : this.workDuringCheck.hashCode());
        result = prime * result + ((this.auditedUnit == null) ? 0 : this.auditedUnit.hashCode());
        result = prime * result + ((this.chiefEngineer == null) ? 0 : this.chiefEngineer.hashCode());
        result = prime * result + ((this.datecheck == null) ? 0 : this.datecheck.hashCode());
        result = prime * result + ((this.changesMade == null) ? 0 : this.changesMade.hashCode());
        result = prime * result + ((this.signature == null) ? 0 : this.signature.hashCode());
        result = prime * result + ((this.employeesRequirementsTechnologicalDocumentation == null) ? 0 : this.employeesRequirementsTechnologicalDocumentation.hashCode());
        result = prime * result + ((this.employeesRequirementsTechnologicalDocumentationComment == null) ? 0 : this.employeesRequirementsTechnologicalDocumentationComment.hashCode());
        result = prime * result + ((this.employeesRequirementsTechnologicalDocumentationTeg == null) ? 0 : Arrays.hashCode(this.employeesRequirementsTechnologicalDocumentationTeg));
        result = prime * result + ((this.executionPreparatoryWorkAccordancePpr == null) ? 0 : this.executionPreparatoryWorkAccordancePpr.hashCode());
        result = prime * result + ((this.executionPreparatoryWorkAccordancePprComment == null) ? 0 : this.executionPreparatoryWorkAccordancePprComment.hashCode());
        result = prime * result + ((this.executionPreparatoryWorkAccordancePprTeg == null) ? 0 : Arrays.hashCode(this.executionPreparatoryWorkAccordancePprTeg));
        result = prime * result + ((this.complianceOrganizationDesignSolutionSpecifiedPpr == null) ? 0 : this.complianceOrganizationDesignSolutionSpecifiedPpr.hashCode());
        result = prime * result + ((this.complianceOrganizationDesignSolutionSpecifiedPprComment == null) ? 0 : this.complianceOrganizationDesignSolutionSpecifiedPprComment.hashCode());
        result = prime * result + ((this.complianceOrganizationDesignSolutionSpecifiedPprTeg == null) ? 0 : Arrays.hashCode(this.complianceOrganizationDesignSolutionSpecifiedPprTeg));
        result = prime * result + ((this.complianceWorkPerformedDesignSolution == null) ? 0 : this.complianceWorkPerformedDesignSolution.hashCode());
        result = prime * result + ((this.complianceWorkPerformedDesignSolutionComment == null) ? 0 : this.complianceWorkPerformedDesignSolutionComment.hashCode());
        result = prime * result + ((this.complianceWorkPerformedDesignSolutionTeg == null) ? 0 : Arrays.hashCode(this.complianceWorkPerformedDesignSolutionTeg));
        result = prime * result + ((this.complianceSequenceTechnologyRelevantOperations == null) ? 0 : this.complianceSequenceTechnologyRelevantOperations.hashCode());
        result = prime * result + ((this.complianceSequenceTechnologyRelevantOperationsComment == null) ? 0 : this.complianceSequenceTechnologyRelevantOperationsComment.hashCode());
        result = prime * result + ((this.complianceSequenceTechnologyRelevantOperationsTeg == null) ? 0 : Arrays.hashCode(this.complianceSequenceTechnologyRelevantOperationsTeg));
        result = prime * result + ((this.complianceAppliedMeansMechanizationSpecifiedPpr == null) ? 0 : this.complianceAppliedMeansMechanizationSpecifiedPpr.hashCode());
        result = prime * result + ((this.complianceAppliedMeansMechanizationSpecifiedPprComment == null) ? 0 : this.complianceAppliedMeansMechanizationSpecifiedPprComment.hashCode());
        result = prime * result + ((this.complianceAppliedMeansMechanizationSpecifiedPprTeg == null) ? 0 : Arrays.hashCode(this.complianceAppliedMeansMechanizationSpecifiedPprTeg));
        result = prime * result + ((this.complianceUsedRiggingEquipmentRequirementsPpr == null) ? 0 : this.complianceUsedRiggingEquipmentRequirementsPpr.hashCode());
        result = prime * result + ((this.complianceUsedRiggingEquipmentRequirementsPprComment == null) ? 0 : this.complianceUsedRiggingEquipmentRequirementsPprComment.hashCode());
        result = prime * result + ((this.complianceUsedRiggingEquipmentRequirementsPprTeg == null) ? 0 : Arrays.hashCode(this.complianceUsedRiggingEquipmentRequirementsPprTeg));
        result = prime * result + ((this.complianceTrussGrippingDevicesRequirementsPpr == null) ? 0 : this.complianceTrussGrippingDevicesRequirementsPpr.hashCode());
        result = prime * result + ((this.complianceTrussGrippingDevicesRequirementsPprComment == null) ? 0 : this.complianceTrussGrippingDevicesRequirementsPprComment.hashCode());
        result = prime * result + ((this.complianceTrussGrippingDevicesRequirementsPprTeg == null) ? 0 : Arrays.hashCode(this.complianceTrussGrippingDevicesRequirementsPprTeg));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CopyrightSupervisionReport (");

        sb.append(id);
        sb.append(", ").append(employeeId);
        sb.append(", ").append(dateCreate);
        sb.append(", ").append(presence);
        sb.append(", ").append(datePresence);
        sb.append(", ").append(locationId);
        sb.append(", ").append(responsibleLeader);
        sb.append(", ").append(workDuringCheck);
        sb.append(", ").append(auditedUnit);
        sb.append(", ").append(chiefEngineer);
        sb.append(", ").append(datecheck);
        sb.append(", ").append(changesMade);
        sb.append(", ").append(signature);
        sb.append(", ").append(employeesRequirementsTechnologicalDocumentation);
        sb.append(", ").append(employeesRequirementsTechnologicalDocumentationComment);
        sb.append(", ").append(Arrays.toString(employeesRequirementsTechnologicalDocumentationTeg));
        sb.append(", ").append(executionPreparatoryWorkAccordancePpr);
        sb.append(", ").append(executionPreparatoryWorkAccordancePprComment);
        sb.append(", ").append(Arrays.toString(executionPreparatoryWorkAccordancePprTeg));
        sb.append(", ").append(complianceOrganizationDesignSolutionSpecifiedPpr);
        sb.append(", ").append(complianceOrganizationDesignSolutionSpecifiedPprComment);
        sb.append(", ").append(Arrays.toString(complianceOrganizationDesignSolutionSpecifiedPprTeg));
        sb.append(", ").append(complianceWorkPerformedDesignSolution);
        sb.append(", ").append(complianceWorkPerformedDesignSolutionComment);
        sb.append(", ").append(Arrays.toString(complianceWorkPerformedDesignSolutionTeg));
        sb.append(", ").append(complianceSequenceTechnologyRelevantOperations);
        sb.append(", ").append(complianceSequenceTechnologyRelevantOperationsComment);
        sb.append(", ").append(Arrays.toString(complianceSequenceTechnologyRelevantOperationsTeg));
        sb.append(", ").append(complianceAppliedMeansMechanizationSpecifiedPpr);
        sb.append(", ").append(complianceAppliedMeansMechanizationSpecifiedPprComment);
        sb.append(", ").append(Arrays.toString(complianceAppliedMeansMechanizationSpecifiedPprTeg));
        sb.append(", ").append(complianceUsedRiggingEquipmentRequirementsPpr);
        sb.append(", ").append(complianceUsedRiggingEquipmentRequirementsPprComment);
        sb.append(", ").append(Arrays.toString(complianceUsedRiggingEquipmentRequirementsPprTeg));
        sb.append(", ").append(complianceTrussGrippingDevicesRequirementsPpr);
        sb.append(", ").append(complianceTrussGrippingDevicesRequirementsPprComment);
        sb.append(", ").append(Arrays.toString(complianceTrussGrippingDevicesRequirementsPprTeg));

        sb.append(")");
        return sb.toString();
    }
}
