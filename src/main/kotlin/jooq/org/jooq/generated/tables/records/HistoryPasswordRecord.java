/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.generated.tables.HistoryPassword;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryPasswordRecord extends UpdatableRecordImpl<HistoryPasswordRecord> implements Record4<Long, String, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>history_password.id</code>.
     */
    public HistoryPasswordRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>history_password.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>history_password.password</code>.
     */
    public HistoryPasswordRecord setPassword(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>history_password.password</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>history_password.date</code>.
     */
    public HistoryPasswordRecord setDate(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>history_password.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>history_password.user_id</code>.
     */
    public HistoryPasswordRecord setUserId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>history_password.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDate, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, LocalDate, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return HistoryPassword.HISTORY_PASSWORD.ID;
    }

    @Override
    public Field<String> field2() {
        return HistoryPassword.HISTORY_PASSWORD.PASSWORD;
    }

    @Override
    public Field<LocalDate> field3() {
        return HistoryPassword.HISTORY_PASSWORD.DATE;
    }

    @Override
    public Field<Long> field4() {
        return HistoryPassword.HISTORY_PASSWORD.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public LocalDate component3() {
        return getDate();
    }

    @Override
    public Long component4() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public LocalDate value3() {
        return getDate();
    }

    @Override
    public Long value4() {
        return getUserId();
    }

    @Override
    public HistoryPasswordRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public HistoryPasswordRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public HistoryPasswordRecord value3(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public HistoryPasswordRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public HistoryPasswordRecord values(Long value1, String value2, LocalDate value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HistoryPasswordRecord
     */
    public HistoryPasswordRecord() {
        super(HistoryPassword.HISTORY_PASSWORD);
    }

    /**
     * Create a detached, initialised HistoryPasswordRecord
     */
    public HistoryPasswordRecord(Long id, String password, LocalDate date, Long userId) {
        super(HistoryPassword.HISTORY_PASSWORD);

        setId(id);
        setPassword(password);
        setDate(date);
        setUserId(userId);
    }

    /**
     * Create a detached, initialised HistoryPasswordRecord
     */
    public HistoryPasswordRecord(org.jooq.generated.tables.pojos.HistoryPassword value) {
        super(HistoryPassword.HISTORY_PASSWORD);

        if (value != null) {
            setId(value.getId());
            setPassword(value.getPassword());
            setDate(value.getDate());
            setUserId(value.getUserId());
        }
    }
}
