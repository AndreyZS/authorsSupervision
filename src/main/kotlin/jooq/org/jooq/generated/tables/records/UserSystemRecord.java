/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.generated.tables.UserSystem;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSystemRecord extends UpdatableRecordImpl<UserSystemRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_system.id</code>.
     */
    public UserSystemRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user_system.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user_system.login</code>.
     */
    public UserSystemRecord setLogin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user_system.login</code>.
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user_system.password</code>.
     */
    public UserSystemRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user_system.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserSystem.USER_SYSTEM.ID;
    }

    @Override
    public Field<String> field2() {
        return UserSystem.USER_SYSTEM.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return UserSystem.USER_SYSTEM.PASSWORD;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public UserSystemRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserSystemRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public UserSystemRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserSystemRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSystemRecord
     */
    public UserSystemRecord() {
        super(UserSystem.USER_SYSTEM);
    }

    /**
     * Create a detached, initialised UserSystemRecord
     */
    public UserSystemRecord(Long id, String login, String password) {
        super(UserSystem.USER_SYSTEM);

        setId(id);
        setLogin(login);
        setPassword(password);
    }

    /**
     * Create a detached, initialised UserSystemRecord
     */
    public UserSystemRecord(org.jooq.generated.tables.pojos.UserSystem value) {
        super(UserSystem.USER_SYSTEM);

        if (value != null) {
            setId(value.getId());
            setLogin(value.getLogin());
            setPassword(value.getPassword());
        }
    }
}
