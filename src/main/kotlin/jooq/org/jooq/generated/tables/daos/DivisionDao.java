/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.generated.tables.Division;
import org.jooq.generated.tables.records.DivisionRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DivisionDao extends DAOImpl<DivisionRecord, org.jooq.generated.tables.pojos.Division, Long> {

    /**
     * Create a new DivisionDao without any configuration
     */
    public DivisionDao() {
        super(Division.DIVISION, org.jooq.generated.tables.pojos.Division.class);
    }

    /**
     * Create a new DivisionDao with an attached configuration
     */
    public DivisionDao(Configuration configuration) {
        super(Division.DIVISION, org.jooq.generated.tables.pojos.Division.class, configuration);
    }

    @Override
    public Long getId(org.jooq.generated.tables.pojos.Division object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Division> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Division.DIVISION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Division> fetchById(Long... values) {
        return fetch(Division.DIVISION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.jooq.generated.tables.pojos.Division fetchOneById(Long value) {
        return fetchOne(Division.DIVISION.ID, value);
    }

    /**
     * Fetch records that have <code>division BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Division> fetchRangeOfDivision(String lowerInclusive, String upperInclusive) {
        return fetchRange(Division.DIVISION.DIVISION_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>division IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Division> fetchByDivision(String... values) {
        return fetch(Division.DIVISION.DIVISION_, values);
    }
}
