/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.CopyrightSupervisionReportSignatureRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CopyrightSupervisionReportSignature extends TableImpl<CopyrightSupervisionReportSignatureRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>copyright_supervision_report_signature</code>
     */
    public static final CopyrightSupervisionReportSignature COPYRIGHT_SUPERVISION_REPORT_SIGNATURE = new CopyrightSupervisionReportSignature();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CopyrightSupervisionReportSignatureRecord> getRecordType() {
        return CopyrightSupervisionReportSignatureRecord.class;
    }

    /**
     * The column
     * <code>copyright_supervision_report_signature.employee_id</code>.
     */
    public final TableField<CopyrightSupervisionReportSignatureRecord, Long> EMPLOYEE_ID = createField(DSL.name("employee_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>copyright_supervision_report_signature.copyright_supervision_report_id</code>.
     */
    public final TableField<CopyrightSupervisionReportSignatureRecord, Long> COPYRIGHT_SUPERVISION_REPORT_ID = createField(DSL.name("copyright_supervision_report_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    private CopyrightSupervisionReportSignature(Name alias, Table<CopyrightSupervisionReportSignatureRecord> aliased) {
        this(alias, aliased, null);
    }

    private CopyrightSupervisionReportSignature(Name alias, Table<CopyrightSupervisionReportSignatureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>copyright_supervision_report_signature</code>
     * table reference
     */
    public CopyrightSupervisionReportSignature(String alias) {
        this(DSL.name(alias), COPYRIGHT_SUPERVISION_REPORT_SIGNATURE);
    }

    /**
     * Create an aliased <code>copyright_supervision_report_signature</code>
     * table reference
     */
    public CopyrightSupervisionReportSignature(Name alias) {
        this(alias, COPYRIGHT_SUPERVISION_REPORT_SIGNATURE);
    }

    /**
     * Create a <code>copyright_supervision_report_signature</code> table
     * reference
     */
    public CopyrightSupervisionReportSignature() {
        this(DSL.name("copyright_supervision_report_signature"), null);
    }

    public <O extends Record> CopyrightSupervisionReportSignature(Table<O> child, ForeignKey<O, CopyrightSupervisionReportSignatureRecord> key) {
        super(child, key, COPYRIGHT_SUPERVISION_REPORT_SIGNATURE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<CopyrightSupervisionReportSignatureRecord, Long> getIdentity() {
        return (Identity<CopyrightSupervisionReportSignatureRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CopyrightSupervisionReportSignatureRecord> getPrimaryKey() {
        return Keys.COPYRIGHT_SUPERVISION_REPORT_SIGNATURE_PKEY;
    }

    @Override
    public List<ForeignKey<CopyrightSupervisionReportSignatureRecord, ?>> getReferences() {
        return Arrays.asList(Keys.COPYRIGHT_SUPERVISION_REPORT_SIGNATURE__FK_EMPLOYEE_COPYRIGHT_SUPERVISION_REPORT_SIGNATURE, Keys.COPYRIGHT_SUPERVISION_REPORT_SIGNATURE__FK_COPYRIGHT_SUPERVISION_REPORT__SIGNATURE);
    }

    private transient UserSystem _userSystem;
    private transient CopyrightSupervisionReport _copyrightSupervisionReport;

    public UserSystem userSystem() {
        if (_userSystem == null)
            _userSystem = new UserSystem(this, Keys.COPYRIGHT_SUPERVISION_REPORT_SIGNATURE__FK_EMPLOYEE_COPYRIGHT_SUPERVISION_REPORT_SIGNATURE);

        return _userSystem;
    }

    public CopyrightSupervisionReport copyrightSupervisionReport() {
        if (_copyrightSupervisionReport == null)
            _copyrightSupervisionReport = new CopyrightSupervisionReport(this, Keys.COPYRIGHT_SUPERVISION_REPORT_SIGNATURE__FK_COPYRIGHT_SUPERVISION_REPORT__SIGNATURE);

        return _copyrightSupervisionReport;
    }

    @Override
    public CopyrightSupervisionReportSignature as(String alias) {
        return new CopyrightSupervisionReportSignature(DSL.name(alias), this);
    }

    @Override
    public CopyrightSupervisionReportSignature as(Name alias) {
        return new CopyrightSupervisionReportSignature(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CopyrightSupervisionReportSignature rename(String name) {
        return new CopyrightSupervisionReportSignature(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CopyrightSupervisionReportSignature rename(Name name) {
        return new CopyrightSupervisionReportSignature(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
