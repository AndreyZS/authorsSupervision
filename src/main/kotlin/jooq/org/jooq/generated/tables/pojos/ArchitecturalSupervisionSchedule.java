/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArchitecturalSupervisionSchedule implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long          id;
    private final Long          employeeId;
    private final Long          especiallyDangerousOperationsId;
    private final Long          locationId;
    private final Long          chiefEngineer;
    private final LocalDateTime datecheck;
    private final Boolean       employerSignature;

    public ArchitecturalSupervisionSchedule(ArchitecturalSupervisionSchedule value) {
        this.id = value.id;
        this.employeeId = value.employeeId;
        this.especiallyDangerousOperationsId = value.especiallyDangerousOperationsId;
        this.locationId = value.locationId;
        this.chiefEngineer = value.chiefEngineer;
        this.datecheck = value.datecheck;
        this.employerSignature = value.employerSignature;
    }

    public ArchitecturalSupervisionSchedule(
        Long          id,
        Long          employeeId,
        Long          especiallyDangerousOperationsId,
        Long          locationId,
        Long          chiefEngineer,
        LocalDateTime datecheck,
        Boolean       employerSignature
    ) {
        this.id = id;
        this.employeeId = employeeId;
        this.especiallyDangerousOperationsId = especiallyDangerousOperationsId;
        this.locationId = locationId;
        this.chiefEngineer = chiefEngineer;
        this.datecheck = datecheck;
        this.employerSignature = employerSignature;
    }

    /**
     * Getter for <code>architectural_supervision_schedule.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>architectural_supervision_schedule.employee_id</code>.
     */
    public Long getEmployeeId() {
        return this.employeeId;
    }

    /**
     * Getter for
     * <code>architectural_supervision_schedule.especially_dangerous_operations_id</code>.
     */
    public Long getEspeciallyDangerousOperationsId() {
        return this.especiallyDangerousOperationsId;
    }

    /**
     * Getter for <code>architectural_supervision_schedule.location_id</code>.
     */
    public Long getLocationId() {
        return this.locationId;
    }

    /**
     * Getter for
     * <code>architectural_supervision_schedule.chief_engineer</code>.
     */
    public Long getChiefEngineer() {
        return this.chiefEngineer;
    }

    /**
     * Getter for <code>architectural_supervision_schedule.datecheck</code>.
     */
    public LocalDateTime getDatecheck() {
        return this.datecheck;
    }

    /**
     * Getter for
     * <code>architectural_supervision_schedule.employer_signature</code>.
     */
    public Boolean getEmployerSignature() {
        return this.employerSignature;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ArchitecturalSupervisionSchedule other = (ArchitecturalSupervisionSchedule) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (employeeId == null) {
            if (other.employeeId != null)
                return false;
        }
        else if (!employeeId.equals(other.employeeId))
            return false;
        if (especiallyDangerousOperationsId == null) {
            if (other.especiallyDangerousOperationsId != null)
                return false;
        }
        else if (!especiallyDangerousOperationsId.equals(other.especiallyDangerousOperationsId))
            return false;
        if (locationId == null) {
            if (other.locationId != null)
                return false;
        }
        else if (!locationId.equals(other.locationId))
            return false;
        if (chiefEngineer == null) {
            if (other.chiefEngineer != null)
                return false;
        }
        else if (!chiefEngineer.equals(other.chiefEngineer))
            return false;
        if (datecheck == null) {
            if (other.datecheck != null)
                return false;
        }
        else if (!datecheck.equals(other.datecheck))
            return false;
        if (employerSignature == null) {
            if (other.employerSignature != null)
                return false;
        }
        else if (!employerSignature.equals(other.employerSignature))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.employeeId == null) ? 0 : this.employeeId.hashCode());
        result = prime * result + ((this.especiallyDangerousOperationsId == null) ? 0 : this.especiallyDangerousOperationsId.hashCode());
        result = prime * result + ((this.locationId == null) ? 0 : this.locationId.hashCode());
        result = prime * result + ((this.chiefEngineer == null) ? 0 : this.chiefEngineer.hashCode());
        result = prime * result + ((this.datecheck == null) ? 0 : this.datecheck.hashCode());
        result = prime * result + ((this.employerSignature == null) ? 0 : this.employerSignature.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ArchitecturalSupervisionSchedule (");

        sb.append(id);
        sb.append(", ").append(employeeId);
        sb.append(", ").append(especiallyDangerousOperationsId);
        sb.append(", ").append(locationId);
        sb.append(", ").append(chiefEngineer);
        sb.append(", ").append(datecheck);
        sb.append(", ").append(employerSignature);

        sb.append(")");
        return sb.toString();
    }
}
