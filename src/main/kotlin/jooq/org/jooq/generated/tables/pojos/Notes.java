/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notes implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long   id;
    private final String name;
    private final String text;
    private final Long   architecturalSupervisionScheduleId;

    public Notes(Notes value) {
        this.id = value.id;
        this.name = value.name;
        this.text = value.text;
        this.architecturalSupervisionScheduleId = value.architecturalSupervisionScheduleId;
    }

    public Notes(
        Long   id,
        String name,
        String text,
        Long   architecturalSupervisionScheduleId
    ) {
        this.id = id;
        this.name = name;
        this.text = text;
        this.architecturalSupervisionScheduleId = architecturalSupervisionScheduleId;
    }

    /**
     * Getter for <code>notes.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>notes.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>notes.text</code>.
     */
    public String getText() {
        return this.text;
    }

    /**
     * Getter for <code>notes.architectural_supervision_schedule_id</code>.
     */
    public Long getArchitecturalSupervisionScheduleId() {
        return this.architecturalSupervisionScheduleId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Notes other = (Notes) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (text == null) {
            if (other.text != null)
                return false;
        }
        else if (!text.equals(other.text))
            return false;
        if (architecturalSupervisionScheduleId == null) {
            if (other.architecturalSupervisionScheduleId != null)
                return false;
        }
        else if (!architecturalSupervisionScheduleId.equals(other.architecturalSupervisionScheduleId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.text == null) ? 0 : this.text.hashCode());
        result = prime * result + ((this.architecturalSupervisionScheduleId == null) ? 0 : this.architecturalSupervisionScheduleId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Notes (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(text);
        sb.append(", ").append(architecturalSupervisionScheduleId);

        sb.append(")");
        return sb.toString();
    }
}
