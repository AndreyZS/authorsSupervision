/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.DefaultSchema;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.ArchitecturalSupervisionScheduleRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArchitecturalSupervisionSchedule extends TableImpl<ArchitecturalSupervisionScheduleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>architectural_supervision_schedule</code>
     */
    public static final ArchitecturalSupervisionSchedule ARCHITECTURAL_SUPERVISION_SCHEDULE = new ArchitecturalSupervisionSchedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArchitecturalSupervisionScheduleRecord> getRecordType() {
        return ArchitecturalSupervisionScheduleRecord.class;
    }

    /**
     * The column <code>architectural_supervision_schedule.id</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>architectural_supervision_schedule.employee_id</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, Long> EMPLOYEE_ID = createField(DSL.name("employee_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>architectural_supervision_schedule.especially_dangerous_operations_id</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, Long> ESPECIALLY_DANGEROUS_OPERATIONS_ID = createField(DSL.name("especially_dangerous_operations_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>architectural_supervision_schedule.location_id</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, Long> LOCATION_ID = createField(DSL.name("location_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>architectural_supervision_schedule.chief_engineer</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, Long> CHIEF_ENGINEER = createField(DSL.name("chief_engineer"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>architectural_supervision_schedule.datecheck</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, LocalDateTime> DATECHECK = createField(DSL.name("datecheck"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column
     * <code>architectural_supervision_schedule.employer_signature</code>.
     */
    public final TableField<ArchitecturalSupervisionScheduleRecord, Boolean> EMPLOYER_SIGNATURE = createField(DSL.name("employer_signature"), SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), this, "");

    private ArchitecturalSupervisionSchedule(Name alias, Table<ArchitecturalSupervisionScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ArchitecturalSupervisionSchedule(Name alias, Table<ArchitecturalSupervisionScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>architectural_supervision_schedule</code> table
     * reference
     */
    public ArchitecturalSupervisionSchedule(String alias) {
        this(DSL.name(alias), ARCHITECTURAL_SUPERVISION_SCHEDULE);
    }

    /**
     * Create an aliased <code>architectural_supervision_schedule</code> table
     * reference
     */
    public ArchitecturalSupervisionSchedule(Name alias) {
        this(alias, ARCHITECTURAL_SUPERVISION_SCHEDULE);
    }

    /**
     * Create a <code>architectural_supervision_schedule</code> table reference
     */
    public ArchitecturalSupervisionSchedule() {
        this(DSL.name("architectural_supervision_schedule"), null);
    }

    public <O extends Record> ArchitecturalSupervisionSchedule(Table<O> child, ForeignKey<O, ArchitecturalSupervisionScheduleRecord> key) {
        super(child, key, ARCHITECTURAL_SUPERVISION_SCHEDULE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<ArchitecturalSupervisionScheduleRecord, Long> getIdentity() {
        return (Identity<ArchitecturalSupervisionScheduleRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ArchitecturalSupervisionScheduleRecord> getPrimaryKey() {
        return Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE_PKEY;
    }

    @Override
    public List<ForeignKey<ArchitecturalSupervisionScheduleRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FK_EMPLOYEE_ASS, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FL_ESPECIALLY_DANGEROUS_OPERATIONS_ASS, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FK_LOCATION_ASS, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FK_USER_SYSTEM_ENGINEER);
    }

    private transient UserSystem _fkEmployeeAss;
    private transient EspeciallyDangerousOperations _especiallyDangerousOperations;
    private transient Location _location;
    private transient UserSystem _fkUserSystemEngineer;

    public UserSystem fkEmployeeAss() {
        if (_fkEmployeeAss == null)
            _fkEmployeeAss = new UserSystem(this, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FK_EMPLOYEE_ASS);

        return _fkEmployeeAss;
    }

    public EspeciallyDangerousOperations especiallyDangerousOperations() {
        if (_especiallyDangerousOperations == null)
            _especiallyDangerousOperations = new EspeciallyDangerousOperations(this, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FL_ESPECIALLY_DANGEROUS_OPERATIONS_ASS);

        return _especiallyDangerousOperations;
    }

    public Location location() {
        if (_location == null)
            _location = new Location(this, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FK_LOCATION_ASS);

        return _location;
    }

    public UserSystem fkUserSystemEngineer() {
        if (_fkUserSystemEngineer == null)
            _fkUserSystemEngineer = new UserSystem(this, Keys.ARCHITECTURAL_SUPERVISION_SCHEDULE__FK_USER_SYSTEM_ENGINEER);

        return _fkUserSystemEngineer;
    }

    @Override
    public ArchitecturalSupervisionSchedule as(String alias) {
        return new ArchitecturalSupervisionSchedule(DSL.name(alias), this);
    }

    @Override
    public ArchitecturalSupervisionSchedule as(Name alias) {
        return new ArchitecturalSupervisionSchedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ArchitecturalSupervisionSchedule rename(String name) {
        return new ArchitecturalSupervisionSchedule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ArchitecturalSupervisionSchedule rename(Name name) {
        return new ArchitecturalSupervisionSchedule(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, LocalDateTime, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
